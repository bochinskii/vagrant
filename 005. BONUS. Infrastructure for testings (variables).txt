----------------------------------------------------------

БОНУС. Пример создания тестовой инфраструктуры.

----------------------------------------------------------

Предположим, что нам нужно поднять тестовую площадку:
- 2 сервера приложений (СП). 2ГБ RAM,
- 2-х серверов баз данных(СБД). 1ГБ RAM, 2 HDD - 10ГБ.


Начнем

$ mkdir /005_Bonus && cd ./005_Bonus

Опять же, если не хотите заморачиваться с "дополнительной" настройкой для ansible, то можете посмотреть
в директорию light_verison. Там рабочий вариант без лишних настроек.

Если же хотите "заморочится", то давайте дальше.


$ mkdir {keys,provisioning}

$ mkdir provisioning/group_vars

Генрируем ключи

$ ssh-keygen -b 4096 -t rsa -f keys/test-env.key -C vagrant

$ cat > provisioning/hosts <<EOF
[test_env_app]
app1.fdsdn.corp	        ansible_host=192.168.0.151    nodename_prefix=apps
app2.fdsdn.corp         ansible_host=192.168.0.152    nodename_prefix=apps

[test_env_db]
db1.fdsdn.corp          ansible_host=192.168.0.161    nodename_prefix=dbs
db2.fdsdn.corp          ansible_host=192.168.0.162    nodename_prefix=dbs
EOF


$ cat > provisioning/group_vars/rancher_cluster <<EOF
---

ansible_connection: ssh
ansible_port: 22
ansible_user: vagrant
ansible_ssh_private_key_file: ../keys/test-env.key
EOF

Создаем Playbooks'ы. С нимим можно ознакомиться в диреткории с проектом.

Создаем Vagrantfile. С ним, так же, можно ознакомится в директории с проектом.


Тут мы начали использовать переменные, а так же использовали массив - SERVERS.
Так же мы созадали и подключили виртуальные жесткие диски с помощью - customize,
а не эксперементальным методом, как это делали в прошлые разы.

Конфигурировали с помощью все того же ansible.

Запускаем.

$ vagrant up

...

Можно проверять.

Ну, и не забываем удалять

$ vagrant destroy
